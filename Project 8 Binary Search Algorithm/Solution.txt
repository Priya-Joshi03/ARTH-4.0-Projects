Project 8: Binary Search Algorithm
Objective:
 Implement a binary search algorithm in any language to find the position of a searched element in a sorted array of integers or state if it's not present.
Tasks:
Take an array of integers as input and ensure the array is sorted.
Implement the binary search algorithm:
Use a loop or recursion to divide the array into halves.
Compare the element with the middle item, adjust the search range accordingly.
Return the position of the searched element if found, or print a message if it is not in the array.

import numpy as np
def binary_search(arr, target):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        guess = arr[mid]
        if guess == target:
            return mid
        elif guess > target:
            high = mid - 1
        else:
            low = mid + 1
   return -1
arr = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
target = 7
result = binary_search(arr, target)
if result != -1:
    print(f"Element {target} is present at index {result}.")
else:
    print(f"Element {target} is not present in the array.")





